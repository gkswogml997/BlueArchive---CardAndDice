<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_system_invisible_object_sprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1004</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>owner_id = ct_argument[0]
original_skill_card = ct_argument[1]
card_pointer_stack = ds_stack_create()
kill_rate_list = ds_list_create()

//스킬 시트가 잘못된 경우
if(is_undefined(original_skill_card.nontarget_skill_target))
{
    global.skill_target = owner_id
    instance_destroy()
}else
{
    //카드 포인터 생성
    number_of_target = 0
    target_place_array = original_skill_card.nontarget_skill_target
    is_enemy_target = original_skill_card.is_enemy_target
    
    //대상리스트 정하기
    var target_list = undefined
    if !owner_id.is_enemy
    {
        if is_enemy_target {target_list = obj_GAME_SYSTEM_MANAGER.enemy_list}
        else {target_list = obj_GAME_SYSTEM_MANAGER.player_list}
    }else
    {
        if is_enemy_target {target_list = obj_GAME_SYSTEM_MANAGER.player_list}
        else {target_list = obj_GAME_SYSTEM_MANAGER.enemy_list}
    }
    
    //대상이 여러개 일 경우 전부 스택에 적재
    for(var i = 0; i &lt; ds_list_size(target_place_array);i++)
    {
        if target_place_array[|i] = 1
        {
            var target_id = undefined
            if original_skill_card.is_base_on_me_skill {
                var middle = ds_list_find_index(target_list,owner_id)
                target_id = ds_list_find_value(target_list,middle-(2-i))
            }else {target_id = ds_list_find_value(target_list,i)}
            
            if !is_undefined(target_id)
            {
                if !target_id.is_dead
                {
                    ds_stack_push(card_pointer_stack,instance_create_v(x,y,obj_enemy_card_pointer_head,owner_id,target_id))
                    ds_list_add(kill_rate_list,target_id)
                }
            }
            number_of_target++
        }
    }
    
    //대상의 위치 데이터가 없을경우
    if number_of_target = 0
    {
        if original_skill_card.extra_description = "strong_man_first"
        {
            var target_id = target_search("attack_power",target_list)
            ds_stack_push(card_pointer_stack,instance_create_v(x,y,obj_enemy_card_pointer_head,owner_id,target_id))
        }
        else if original_skill_card.extra_description = "equivalence"
        {
            var target_id = search_skill_location_target(owner_id.card_position,!owner_id.is_enemy)
            ds_stack_push(card_pointer_stack,instance_create_v(x,y,obj_enemy_card_pointer_head,owner_id,target_id))
        }
        else {ds_stack_push(card_pointer_stack,instance_create_v(x,y,obj_enemy_card_pointer_head,owner_id,owner_id))}
    } 
     
    //딜레이
    delay = false
    if number_of_target {alarm[0] = 120}
    else {alarm[0] = 30}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(kill_rate_list)
while(!ds_stack_empty(card_pointer_stack))
{
    instance_destroy(ds_stack_pop(card_pointer_stack))
}
ds_stack_destroy(card_pointer_stack)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delay = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if delay and !owner_id.is_enemy
{
    global.skill_target = owner_id
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var size = ds_list_size(kill_rate_list)
for(var i = 0; i &lt; size; i++)
{
    var target = kill_rate_list[|i]
    var xx = target.x
    var yy = target.y
    kill_rate_of_skill(xx,yy,owner_id,original_skill_card,target)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
