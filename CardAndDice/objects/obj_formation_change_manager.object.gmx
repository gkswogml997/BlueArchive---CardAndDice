<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_system_invisible_object_sprite</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_FORMATION_MANAGER) {ds_list_add(obj_FORMATION_MANAGER.formation_parts_list,id)}

//카페로 보내버리는 슬롯
var xx = sprite_get_width(spr_formation_go_cafe_slot)/2
var yy = room_height - sprite_get_height(spr_formation_go_cafe_slot)/2
instance_create_v(xx,yy,obj_formation_go_cafe_slot,id,undefined)

//슬롯 만들기
size_of_character = ds_list_size(obj_GAME_SYSTEM_MANAGER.player_list)

slot_list = ds_list_create()
var card_width = sprite_get_width(spr_mini_card)
var card_height = sprite_get_height(spr_mini_card)
var card_list_width = card_width*size_of_character
var xx = room_width/2-card_list_width/2+card_width/2
var yy = room_height*3/5
for(var i = 0; i &lt; size_of_character; i++)
{
    ds_list_add(slot_list,instance_create_v(xx+card_width*i,yy,obj_replace_card_slot,id,undefined))
}

//정보 받아오기 파트
card_list = ds_list_create()
repeat(size_of_character)
{
    ds_list_add(card_list,undefined)   
}

var xx = room_width/2+card_list_width/2-card_width/2
var yy = room_height/2
for(var i = 0; i &lt; size_of_character; i++)
{
    var target_original_id = obj_GAME_SYSTEM_MANAGER.player_list[|i]
    if !is_undefined(target_original_id)
    {
        var target = instance_create_v(xx-card_width*i,yy,obj_replace_character_card,id,target_original_id)
        ds_list_replace(card_list,i,target)
    }
}

// 변수 선언
pick_up_card = undefined

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//편성에서 바뀐 자리로 카드 이동
for (var i = 0; i &lt;size_of_character; i++)
{
    var slot_card = slot_list[|i].slot_owner
    if !is_undefined(slot_card)
    {
        obj_GAME_SYSTEM_MANAGER.player_list[|size_of_character-i-1] = slot_card.original_card_id
        obj_GAME_SYSTEM_MANAGER.player_list[|size_of_character-i-1].card_position = size_of_character-i-1
        //편성에서 바뀐 자리로 스킬 이동
        for (var j = 0; j &lt; ds_list_size(slot_card.original_card_id.skill_list); j++)
        {
            slot_card.skill_slot[|j].slot_owner.original_skill_id.owner_id = slot_card.original_card_id
            slot_card.original_card_id.skill_list[|j] = slot_card.skill_slot[|j].slot_owner.original_skill_id
        }
        //편성에서 바뀐 자리로 장비 이동
        for (var j = 0; j &lt; slot_card.original_card_id.equipment_slot_max; j++)
        {
            slot_card.equipment_slot[|j].slot_owner.original_equipment_id.owner_id = slot_card.original_card_id
            slot_card.original_card_id.equipment_slot[j] = slot_card.equipment_slot[|j].slot_owner.original_equipment_id
        }
        load_item_funcition(slot_card.original_card_id)
    }else
    {
        obj_GAME_SYSTEM_MANAGER.player_list[|size_of_character-i-1] = undefined
    }
}


ds_list_destroy(card_list)
ds_list_destroy(slot_list)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
