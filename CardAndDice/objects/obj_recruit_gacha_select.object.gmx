<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1030</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_RECRUIT_MANAGER) {ds_list_add(obj_RECRUIT_MANAGER.recruit_parts_list,id)}

select_card = undefined

enter_time = 50
instance_create(x,y,obj_recruit_gacha_bg)

for(var i = 1; i &lt;= 3; i++)
{
    var gacha_list = ds_map_find_value(obj_GAME_SYSTEM_MANAGER.gacha_table,"playable")
    var rand_num = gacha_list[| irandom(ds_list_size(gacha_list)-1)]
    instance_create_v(view_xview+view_wview*i/4,view_yview+view_hview/3,obj_recruit_character_card,rand_num)
}

button1 = undefined
button2 = undefined
button_return = ""
notice_box_return = ""

is_select_able = true
if is_undefined(search_empty_slot(obj_GAME_SYSTEM_MANAGER.player_list,5))
{
    is_select_able = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !is_undefined(button1) {instance_destroy(button1)}
if !is_undefined(button2) {instance_destroy(button2)}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
x = view_xview+view_wview/2
y = view_yview+view_hview/2

draw_sprite_ext(spr_1pixel,0,view_xview,view_yview,view_wview,view_hview,0,c_white,enter_time/50)

enter_time--

if is_select_able
{
    if enter_time &lt; 0 and !instance_exists(obj_UI_button)
    {
        button1 = make_UI_button(view_xview+view_wview*1/3,view_yview+view_hview*4/5,"선택",spr_UI_button_bg_blue,"선택",id)
        button2 = make_UI_button(view_xview+view_wview*2/3,view_yview+view_hview*4/5,"취소",spr_UI_button_bg_yellow,"취소",id)
    }
}else
{
    if enter_time &lt; 0 and !instance_exists(obj_UI_button) and notice_box_return = ""
    {
        make_notice_box("더이상 학생을 편성할 자리가 없어 세 학생 모두 카페로 이동했습니다.",id,true)
    }
}

if button_return = "선택" 
{
    if !is_undefined(select_card)
    {
        add_player_card(select_card.character_number)
        instance_destroy(select_card)
        select_card = undefined
        if !instance_exists(obj_phase_change_animation) {instance_create(0,0,obj_phase_change_animation)}
    }
    button_return = ""
}
if button_return = "취소" 
{
    if !instance_exists(obj_phase_change_animation) {instance_create(0,0,obj_phase_change_animation)}
    button_return = ""
}
if notice_box_return = "확인" 
{
    if !instance_exists(obj_phase_change_animation) {instance_create(0,0,obj_phase_change_animation)}
    notice_box_return = "next"
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
